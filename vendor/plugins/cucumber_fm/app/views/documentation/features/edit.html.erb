<div class="frame">
  <div class="head">
    <div class="actions">
      <h2>Actions</h2>
    </div>
    <h1>[ <%= @feature.info.tags.join(" ") %> ] ::: <%= @feature.info.title %> - <i><%= @feature.relative_path %></i>
    </h1>
  </div>
  <div class="content two_columns">
    <div class="left">
      <div id="raw-bespin" class="bespin" data-bespinoptions='{ "settings": { "tabstop": 2, "theme": "white" }, "syntax": "gherkin", "stealFocus": true }'><%= @feature.raw -%></div>
    </div>

    <div class="right">
      <ul class="actions">
        <li>
          <div style="height: 2.3em; width: 100%;">
            <div style="float: left;">
              <%= link_to_function "Save", "document.getElementById('raw').value= editor.value; document.edit_form.submit();",
                                   :style => "width: 5em;" %>
            </div>
            <div style="float: right;">
              <%= link_to_function '[+]', '$("#actions_more").toggle();', :style => "width: 1.5em;" %>
            </div>
          </div>

          <div id="actions_more" style="display: none; float:none; margin-top: 5%;">
            <% form_tag documentation_feature_path(@feature.id), :name => 'edit_form' do %>
                <%= hidden_field_tag 'raw', '' %>

                <%= hidden_field_tag 'config[tags]', @cfm.config.tags %>
                <%= hidden_field_tag 'config[dir]', @cfm.config.dir %>
                <%= hidden_field_tag 'config[aggregate][]', @cfm.config.aggregate.first %>
                <%= hidden_field_tag 'config[aggregate][]', @cfm.config.aggregate.last %>

                <ul class="form_fields">
                  <li>
                    <label for="config_cvs_commit">
                      <%= hidden_field_tag 'config[cvs_commit]', 0 %>
                      <%= check_box_tag 'config[cvs_commit]', 1, @cfm.config.cvs_commit=='1' %>
                      Commit
                    </label>
                    <label for="config_cvs_push">
                      <%= hidden_field_tag 'config[cvs_push]', 0 %>
                      <%= check_box_tag 'config[cvs_push]', 1, @cfm.config.cvs_push=='1' %>
                      Push
                    </label>
                  </li>
                </ul>
            <% end %>
          </div>
        </li>
        <!--<li><%#= link_to "Back", documentation_features_path %></li>-->
      </ul>
      <h3>File Management <%= link_to_function '[+]', '$("#file_management_more").toggle();' %></h3>

      <div id="file_management_more" style="display: none;">
        <ul class="actions">
          <li>
            <% form_tag rename_documentation_feature_path(@feature.id) do %>
                <%= text_field_tag :name %>
                <%= submit_tag 'rename' %>
            <% end %>
          </li>
          <li>
            <% form_tag move_documentation_feature_path(@feature.id) do %>
                <%= select_tag 'dir', options_for_select(list_of_dirs, :selected => @cfm.config.dir) %>
                <%= submit_tag 'move' %>
            <% end %>
          </li>
          <li>
            <%= link_to 'Delete', documentation_feature_path(@feature.id), :method => 'delete', :confirm => "Do you really want to remove this feature?" %>
          </li>
        </ul>
      </div>
      <h3>Navigation <%= text_field_tag 'navigation_query', '',
                                        :style => "width: 7em; margin-left: 0.5em;", :onKeyUp => 'navigationFilter();' %></h3>
      <ul class="navigator_list">
      </ul>
    </div>

    <div class="clb"></div>


  </div>
</div>


<script>

    window.onBespinLoad = function() {
        var edit = document.getElementById("raw-bespin");
        var env = edit.bespin;
        window.editor = env.editor;
        navigationRedraw();
        editor.textChanged.add(function(oldRange, newRange, newText) {
            navigationRedraw();
        });

        <% if params.has_key?('query') %>
        <%= "scrollToFirstMatchingLine('#{params['query']}');" %>
        <% end %>
    };


    function editorLines() {
        return(editor.value.split("\n"));
    }

    function navigationElement(line_number, title, scenario_tags, estimation) {
        return("<li><h5><a onclick=\"scrollTo(" + line_number + ");; return false;\" href=\"#\">" + title + "</a></h5>\
       <p>" + scenario_tags + "</p>\
       <span class=\"marker m_magenta\" style=\"position:absolute; top: 13px; right: 5px;\">" + estimation + "</span> </li>");
    }

    function navigationRedraw() {
        var scenario_line = /Scenario:/
        var scenario_title = /Scenario:\s?/
        var navigation = ""
        var line_before = ""
        var tags_line = ""
        var estimation = ""
        $.each(editorLines(), function(index, line) {
            if (line_before.match(/^\s*@.+/)) {
                tags_line = line_before;
                if (tags_line.match(/@\d+/)) {
                    var estimation_tag = tags_line.match(/@\d+/)
                    estimation = estimation_tag[0].replace('@', '');
                }
            }
            else {
                tags_line = 'no tags found'
                estimation = 'NaN';
            }

            if (scenario_line.test(line)) {
                navigation += navigationElement(index + 1, line.replace(scenario_title, ''), tags_line, estimation);
            }
            line_before = line;
        });
        $('.navigator_list').html(navigation);
        navigationFilter();
    }

    function scrollTo(number) {
        editor.setLineNumber(number);
    }

    function findLineWithText(text) {
        var _pattern = new RegExp(text);
        var _lines = window.editor.value.split("\n")
        var _matching_lines = [];

        $.each(_lines, function(index, _line) {
            if (_line.match(_pattern) != null) {
                _matching_lines.push(index)
            }
        });
        return(_matching_lines[0] + 1);
    }

    function scrollToFirstMatchingLine(text) {
        scrollTo(findLineWithText(text));
    }

    function showOnlyScenariosThatPassFilterOnNavigationList(filter) {
        if (filter != null || filter != "") {
            var jqueryExpression = "";
            $.each(filter.split(/\s+/), function(index, word) {
                if (word.match(/^~/)) {
                    jqueryExpression += ':not(:contains(\'' + word.replace('~','') + '\'))';
                }
                else {
                    jqueryExpression += ':contains(\'' + word + '\')';
                }
            })

            var show_expression = "ul.navigator_list > li" + jqueryExpression;
            $("ul.navigator_list > li").hide();
            $(show_expression).show();
        }
        else {
            $("ul.navigator_list > li").show();
        }
    }

    function navigationFilter() {
        showOnlyScenariosThatPassFilterOnNavigationList($('#navigation_query').attr('value'));
    }

</script>