<div class="form_newsletter">
<div class="column_left">
    <div class="pdd_10 no_pdd_t">
        <fieldset class="inputs labels_ta_r labels_200">
          <ol class="align_inputs">
            <%= form.input :name %>
            <%= form.input :owner_email, :required => true, :input_html => { :disabled => @newsletter_list.newsletter_campaigns.not_sent_to_campaign_monitor.any? } %>
            <%= form.input :description, :input_html => {:style => "width:230px;height:100px"} %>
          </ol>
        </fieldset>
    </div>
</div>

<div class="column_right">
    <fieldset class="inputs labels_ta_r labels_200">
        <ol class="align_inputs">
            <%= form.input :synch_with_sources %>
            <div style="display: none">
                <%= form.input :sourceable_items, :collection => [], :as => :select, :multiple => true %>
                <%= form.input :tag_group_items, :collection => [], :as => :select, :multiple => true %>
            </div>
        </ol>
    </fieldset>

    <fieldset class="inputs labels_ta_r labels_200">
        <ol class="align_inputs">
            <li class="string">
                <label><%= t("newsletters.newsletter_lists.form.keyword_for_autocompleter") %></label>
                <%= text_field_tag "autocompleter", nil %>
            </li>
        </ol>
    </fieldset>

    <ul id="ul_sources_list" style="margin-left:210px;width:230px;margin-bottom:2px;padding:1px">
        <%= form.fields_for :newsletter_sources, @newsletter_list.newsletter_sources.without_tags_and_custom do |builder| %>
            <li id="li_source_<%= builder.object.id %>" style=""><%= render :partial => "newsletter_sources_fields", :locals => {:f => builder} %></li>
        <% end %>
    </ul>

    <% tag_groups = @newsletter_list.newsletter_sources.with_tags.map(&:sourceable) %>
        <% tag_groups.each do |tag_group| %>
            <ul class="droppable" id="tag_group_<%= tag_group.new_record? ? "new#{Time.now.to_f.to_s.gsub(".", "")}" : tag_group.id %>" style="border: 1px solid grey;margin-left:210px;margin-bottom:2px;width:230px;padding:1px;">
                <% tag_group.tags.each do |tag| %>
                    <li class="draggable" style="" id="tag_<%= tag.id %>">
                        <%= tag.name %>
                        <%= link_to_function image_tag("/icons/remove.png"), "remove_tag('#{tag.id}')" %>
                    </li>
                <% end %>
            </ul>
    <% end %>


    <div id="newsletter_sources_tags"></div>

    <a data-remote="true" data-method="get" id="autocompleter_sourceable_form" href="<%= sourceable_for_search_newsletters_newsletter_lists_path(:format => :js) %>" class="display:none"></a>
</div>

<div class="clb"></div>
</div>


<script language="javascript">
    $(document).ready(function() {
        jQuery.ajaxSetup({
            'beforeSend': function(xhr) {
                xhr.setRequestHeader("Accept", "text/javascript")
            }
        });
        $("#autocompleter").autocomplete({
                    url : '<%= sourceable_for_search_newsletters_newsletter_lists_path(:format => :js) %>',
                    mustMatch : false
                }
        ).result(function(event, item) {
                    if(item[1] == "ActsAsTaggableOn::Tag"){
                        tmp_id = "new" + new Date().getTime().toString();
                        tags_tag_groups[item[2].toString()] = tmp_id;
                        remove_link = "<a href='#' onclick=\"" + "remove_tag('" + item[2].toString() + "')" + "\"><%= image_tag 'icons/remove.png', style: 'border: 0' %></a></li>";
                        $("<ul  class='droppable' id='tag_group_" + tmp_id + "' style='margin-left:210px;width:230px;padding:1px;margin-bottom:2px;'><li class='draggable' style='border: 1px solid grey' id='tag_" + item[2] + "'>" + item[0] + " " + remove_link + "</li></ul>").insertBefore("#newsletter_sources_tags");
                        init_sortable();
                    }
                    else
                    {
                        $("#newsletter_list_sourceable_items").
                                    append($("<option></option>").
                                    attr("value", item[1] + "_" + item[2]).
                                    text(item[0]));
                        $('#autocompleter').val('');

                        $("#ul_sources_list").append("<li id='source_li_" + item[1] + "_" + item[2] + "'>" + item[0] + "<a href='#' onclick=\"" + "remove_source('" + item[1] + "_" + item[2] + "', true)" + "\"><%= image_tag 'icons/remove.png', style: 'border: 0' %></a></li>");
                    }
                    $('#autocompleter').val('');
                });

        $("#autocompleter").autocomplete('<%= sourceable_for_search_newsletters_newsletter_lists_path(:format => :js) %>', function(event, data, formatted) {
        });
    });

    function remove_source(id, new_record){
        if(new_record){
            $("#source_li_" + id).remove();
            $("#newsletter_list_sourceable_items option[value='" + id + "']").remove()
        }
        else{
            $("#destroy_hidden_field_" + id).val('true');
            $('#li_source_' + id).hide()
        }
    }

    function remove_tag(id, tag_group_id){
        tags_tag_groups[id] = undefined;
        $('li[id=tag_' + id + ']').remove()
    }

    function init_sortable(){
    $(".droppable").sortable({
        revert: "invalid",
        items: "li",
        connectWith: ".droppable",
        receive: handle_receive
    });
    }

    init_sortable();

    function handle_receive(event, ui){
        target_group_id = $(this).attr('id').split("_").reverse()[0].toString();
        window.tags_tag_groups[ui.item.attr("id").split("_").reverse()[0]] = target_group_id;
        prev_tag_group_id = ui.sender.attr("id").split("_").reverse()[0];
        window.tag_groups_tags_count[prev_tag_group_id] = parseInt(window.tag_groups_tags_count[prev_tag_group_id]) - 1;
        window.tag_groups_tags_count[target_group_id] = parseInt(window.tag_groups_tags_count[target_group_id]) +1;
    }

    function select_sourceable_items(){
        $("#newsletter_list_sourceable_items option").each(function()
        {
            $(this).attr("selected","selected");
        });

        $("#newsletter_list_tag_group_items option").each(function()
        {
            $(this).attr("selected","selected");
        });
    }

    var tags_tag_groups = [];
    var tag_groups_tags_count = [];

    <% tag_groups.each do |tag_group| %>
        <%= "tag_groups_tags_count['#{tag_group.id}'] = '#{tag_group.tags.count}';".html_safe %>
        <% tag_group.tags.each do |tag| %>
            <%= "tags_tag_groups['#{tag.id}'] = '#{tag_group.id}';".html_safe %>
        <% end %>
    <% end %>

    function serialize_tag_groups_items(){
        $('#newsletter_list_tag_group_items').find('option').remove();
        $.each(tags_tag_groups, function(index, value) {
            if(value != undefined){
                $("#newsletter_list_tag_group_items").
                            append($("<option></option>").
                            attr("value", index.toString() + ":" + value).
                            text("1"));
            }
        });

        if(tags_tag_groups.filter(function(e){return e}).length == 0){
            $("#newsletter_list_tag_group_items").
                    append($("<option></option>").
                    attr("value", "").
                    text("1"));
        }

        $.each(tag_groups_tags_count, function(index, value) {
            if(value != undefined && parseInt(value) == 0){
                $("#newsletter_list_tag_group_items").
                            append($("<option></option>").
                            attr("value","null:" + index.toString()).
                            text("1"));
            }
        })


    }
</script>
